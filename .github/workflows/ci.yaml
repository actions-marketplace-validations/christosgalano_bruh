name: ci
run-name: ${{ github.workflow }}

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  ci:
    name: ci
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup Go 1.20.x
      uses: actions/setup-go@v4
      with:
        go-version: 1.20.x
    
    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install Go tools
      run: task setup
    
    - name: Lint
      run: task lint
    
    - name: Test
      run: task test:junit
      continue-on-error: true

    - name: Code coverage
      run: task coverage:junit

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: success() || failure()
      with:
        check_name: test-results
        junit_files: test-results.xml
        comment_mode: always
        fail_on: test failures
        action_fail: false
        ignore_runs: false
        job_summary: true
        compare_to_earlier_commit: true
        check_run_annotations: all tests, skipped tests

    - name: Publish code coverage results
      if: success() || failure()
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        output: both
        format: markdown
        indicators: true
        thresholds: "60 80"
        fail_below_min: true
        hide_complexity: true
        hide_branch_rate: false

    - name: Code coverage summary
      if: success() || failure()
      run: |
        echo "## " >> $GITHUB_STEP_SUMMARY
        cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: Add coverage PR comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: (success() || failure()) && github.event_name == 'pull_request'
      with:
        path: code-coverage-results.md
        recreate: true

    - name: Benchmark
      run: task benchmark
    
    - name: Security
      run: task security
